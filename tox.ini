[tox]
skipsdist=True
requires = tox-conda
envlist =
        # test
        py3{8, 9, 10}-tests


[base]
package_name = thermoextrap
import_name = thermoextrap

conda_env =
    environment.yaml
conda_env_dev =
    environment-dev.yaml
conda_deps_test =
    pandas
    pytest

conda_channels =
    conda-forge
    wpk-nist

conda_deps_docs =
    sphinx
    sphinx_rtd_theme
    nbsphinx
    ipython
    setuptools-scm

conda_deps_dist_pypi =
    setuptools
    setuptools-scm
    twine
    setuptools_scm_git_archive
    build

conda_deps_dist_conda =
    anaconda-client
    grayskull
    conda-build
    conda-verify
    boa
    setuptools-scm


allowlist_externals =
    bash
    open
    cat
    rm
    echo
    mkdir
commands_test_check =
    python --version
    python -c 'import {[base]import_name}; print( {[base]import_name}.__version__)'
    bash -ec 'echo $PWD'
    echo posargs {posargs}



[testenv]
usedevelop =
    tests: True
conda_env =
    tests: {[base]conda_env}

conda_deps =
    tests: {[base]conda_deps_test}
allowlist_externals =
    {[base]allowlist_externals}
commands =
    {[base]commands_test_check}
    pytest {posargs}




[testenv:docs-{build, release}]
envdir={toxworkdir}/docs
usedevelop = True
conda_env = {[base]conda_env}
conda_deps =
        {[base]conda_deps_docs}
        ghp-import
allowlist_externals =
        {[base]allowlist_externals}
changedir={toxworkdir}/docs-dist
commands =
         build: bash -c 'rm -rf {toxworkdir}/docs-dist/*'
         build: sphinx-build  --color -b html -d "{toxworkdir}/docs-dist/doctrees" "{toxinidir}/docs"  "{toxworkdir}/docs-dist/html"
         build: open {toxworkdir}/docs-dist/html/index.html
         release: ghp-import -n {posargs:-m 'update docs'} -b nist-pages {toxworkdir}/docs-dist/html


# create pypi dist
[testenv:dist-pypi-{build, testrelease, release}]
envdir={toxworkdir}/dist-pypi-env
skip_install=True
conda_deps =
    {[base]conda_deps_dist_pypi}
allowlist_externals =
    {[base]allowlist_externals}
changedir = {toxworkdir}/dist-pypi
commands =
    build: rm -rf {toxworkdir}/dist
    build: python -m build --outdir "{toxworkdir}/dist-pypi/"

    testrelease: twine upload --repository testpypi {toxworkdir}/dist-pypi/*
    release: twine upload {toxworkdir}/dist/*

# create conda dist
[testenv:dist-conda-{recipe, build, command}]
envdir={toxworkdir}/dist-conda-env
skip_install=True
conda_deps =
    {[base]conda_deps_dist_conda}

allowlist_externals =
    {[base]allowlist_externals}
changedir = {toxworkdir}/dist-conda
commands =
    recipe: rm -rf {toxworkdir}/dist-conda/{[base]package_name}
    recipe: grayskull pypi {[base]package_name}
    recipe: cat mypackage/meta.yaml

    build: rm -rf build
    build: mkdir -p build
    build: conda mambabuild --output-folder=build --no-anaconda-upload .
    command: {posargs:python}


# test pypi/conda install from local/remote
[testenv:test-dist-{pypi, conda}-{local,remote}-py3{8,9,10}]
skip_install = True
usedevelop = False
conda_channels =
    {[base]conda_channels}
conda_deps =
    {[base]conda_deps_test}
    conda-remote: {[base]package_name}
    conda-local: {posargs}

deps =
    pypi-remote: {[base]package_name}
    pypi-local: {posargs}

allowlist_externals =
    {[base]allowlist_externals}
commands =
    {[base]commands_test_check}
    pytest {toxinidir}
