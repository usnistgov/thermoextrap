[tox]
requires = tox-conda
#envlist =  py36, py37, py38, flake8
# envlist = py36, py37, py38
envlist = py38, py39, py310

# [travis]
# python =
#     3.8: py38
#     3.7: py37
#     3.6: py36

# [testenv:flake8]
# basepython = python
# deps = flake8
# commands = flake8 thermoextrap tests

[testenv]
# to use develop install
usedevelop = True
conda_env = environment.yaml
conda_deps = pytest
commands =
    pytest {posargs}


[testenv:{py38, py39, py310}-pypi-install]
skip_install = True
usedevelop = False
conda_deps =
           pypi_install-py38: python=3.8
           pypi_install-py39: python=3.9
           pypi_install-py310: python=3.10
           {[testenv]conda_deps}
deps =
     thermoextrap
whitelist_externals = echo
commands =
         python --version
         echo $PWD
         pytest {posargs} {toxinidir}

[testenv:{py38, py39, py310}-conda-install]
skip_install = True
usedevelop = False
conda_deps =
           pypi_install-py38: python=3.8
           pypi_install-py39: python=3.9
           pypi_install-py310: python=3.10
           {[testenv]conda_deps}
           thermoextrap
whitelist_externals = echo
commands =
         python --version
         echo $PWD
         pytest {posargs} {toxinidir}





[testenv:docs-nist-pages]
usedevelop = True
skipsdist=True
conda_env = {[testenv]conda_env}
conda_deps =
           setuptools-scm # to get versioning correct on docs with editable install
           sphinx
           sphinx_rtd_theme
           nbsphinx
           ipython
whitelist_externals =
                    bash
                    open
changedir=docs-nist-pages/html
commands =
         bash ./cleanup.sh
         sphinx-build  --color -b html -d "{envtmpdir}/doctrees" ../../docs .
         open {toxinidir}/docs-nist-pages/html/index.html




[testenv:pypi-{build, testrelease, release}]
envdir={toxworkdir}/pypi-build
skip_install=True
skipsdist=True
conda_deps =
           setuptools
           setuptools-scm
           twine
           setuptools_scm_git_archive
           build
whitelist_externals =
                    echo
                    rm
commands =
         pypi-build: rm -rf {toxworkdir}/pypi-dist
         pypi-build: python -m build --outdir "{toxworkdir}/pypi-dist/"

         pypi-testrelease: twine upload --repository testpypi {toxworkdir}/pypi-dist/*
         pypi-release: twine upload {toxworkdir}/pypi-dist/*


[testenv:{grayskull, conda-build}]
envdir={toxworkdir}/conda-build
skip_install=True
skipsdist=True
conda_deps =
           anaconda-client
           grayskull
           conda-build
           boa
           setuptools
           setuptools-scm # for some reason, I need this to get the licensing right?
whitelist_externals =
                    echo
                    mkdir
                    cat
                    rm
changedir = {toxworkdir}/conda-dist
commands =
        grayskull: rm -rf thermoextrap
        grayskull: grayskull pypi thermoextrap
        grayskull: cat thermoextrap/meta.yaml

        conda-build: rm -rf build
        conda-build: mkdir -p build
        # conda-build: conda-build . --output-folder=build
        conda-build: conda mambabuild --output-folder=build .
