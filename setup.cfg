# [versioneer]
# VCS = git
# style = pep440
# versionfile_source = thermoextrap/_version.py
# versionfile_build = thermoextrap/_version.py
# tag_prefix =
# parentdir_prefix =

[metadata]
version = 0.0.1
name = thermoextrap
author = Jacob Monroe, William Krekelberg
author_email = jacob.monroe@nist.gov
license = "NIST license https://www.nist.gov/director/licensing"
license_files = LICENSE
description =  Thermodynamic extrapolation and interpolation
long_description_content_type = text/markdown
long_description = file: README.md
keywords = data analysis
url = https://github.com/usnistgov/thermo-extrap
classifiers =
    Development Status :: 3 - Alpha
    License :: Public Domain
    Operating System :: OS Independent
    Intended Audience :: Science/Research
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Topic :: Scientific/Engineering


[options]
packages = find:
zip_safe = True # if using mypy, must be False
include_package_data = True
python_requires = >=3.6
install_requires =
     numpy >= 1.15
     numba >= 0.50
     xarray >= 0.16


[aliases]
test = pytest

[tool:pytest]
addopts = --verbose
testpaths = tests

# look into this
# [pytest-watch]
# nobeep = True

# [isort]
# multi_line_output=3
# include_trailing_comma=True
# force_grid_wrap=0
# use_parentheses=True
# line_length=88


[isort]
profile = black
skip_gitignore = true
force_to_top = true
default_section = THIRDPARTY
known_first_party = thermoextrap

[flake8]
ignore =
    E203 # whitespace before ':' - doesn't work well with black
    E402 # module level import not at top of file
    E501 # line too long - let black worry about that
    E731 # do not assign a lambda expression, use a def
    W503 # line break before binary operator
exclude=
    .eggs
    doc

# See the docstring in versioneer.py for instructions. Note that you must
# re-run 'versioneer.py setup' after changing this section, and commit the
# resulting files.
# Most of the numerical computing stack doesn't have type annotations yet.
[mypy-affine.*]
ignore_missing_imports = True
[mypy-bottleneck.*]
ignore_missing_imports = True
[mypy-cdms2.*]
ignore_missing_imports = True
[mypy-cf_units.*]
ignore_missing_imports = True
[mypy-cfgrib.*]
ignore_missing_imports = True
[mypy-cftime.*]
ignore_missing_imports = True
[mypy-cupy.*]
ignore_missing_imports = True
[mypy-dask.*]
ignore_missing_imports = True
[mypy-distributed.*]
ignore_missing_imports = True
[mypy-h5netcdf.*]
ignore_missing_imports = True
[mypy-h5py.*]
ignore_missing_imports = True
[mypy-iris.*]
ignore_missing_imports = True
[mypy-matplotlib.*]
ignore_missing_imports = True
[mypy-Nio.*]
ignore_missing_imports = True
[mypy-nc_time_axis.*]
ignore_missing_imports = True
[mypy-numbagg.*]
ignore_missing_imports = True
[mypy-numpy.*]
ignore_missing_imports = True
[mypy-netCDF4.*]
ignore_missing_imports = True
[mypy-netcdftime.*]
ignore_missing_imports = True
[mypy-pandas.*]
ignore_missing_imports = True
[mypy-pint.*]
ignore_missing_imports = True
[mypy-PseudoNetCDF.*]
ignore_missing_imports = True
[mypy-pydap.*]
ignore_missing_imports = True
[mypy-pytest.*]
ignore_missing_imports = True
[mypy-rasterio.*]
ignore_missing_imports = True
[mypy-scipy.*]
ignore_missing_imports = True
[mypy-seaborn.*]
ignore_missing_imports = True
[mypy-setuptools]
ignore_missing_imports = True
[mypy-sparse.*]
ignore_missing_imports = True
[mypy-toolz.*]
ignore_missing_imports = True
[mypy-zarr.*]
ignore_missing_imports = True
